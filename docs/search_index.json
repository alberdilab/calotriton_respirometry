[["index.html", "AlberdiLab | Study title to be added Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Study title to be added Last update: 2025-05-15 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of the individual-level respirometry tests of Calotriton asper from different elevations and acclimation in distinct temperatures. metagenomic data of Podarcis muralis and Podarcis liolepis lizards from different environments during an experimental setup. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/calotriton_respirometry.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(readxl) library(readr) library(hms) library(dplyr) # For respirometry data library(respR) # For plotting library(ggplot2) library(ggpmisc) library(ggpubr) # For statistics library(nlme) library(lme4) library(rstatix) "],["data-input-and-cleaning.html", "Chapter 2 Data input and cleaning", " Chapter 2 Data input and cleaning load(&quot;data/data.Rdata&quot;) plot(Harpea1_acclimatacion_rate) plot(Goizueta5_acclimatacion_rate) plot(Erlan8_acclimatacion_rate) plot(Leitzaran7_acclimatacion_rate) plot(Harpea5_acclimatacion_rate) plot(Goizueta7_acclimatacion_rate) plot(Leitzaran3_acclimatacion_rate) plot(Erlan3_acclimatacion_rate) plot(Goizueta1_post1_rate) plot(Leitzaran7_post1_rate) plot(Erlan7_post1_rate) plot(Leitzaran6_post1_rate) plot(Goizueta3_post1_rate) plot(Harpea1_post1_rate) plot(Erlan5_post1_rate) plot(Goizueta5_post1_rate) plot(Erlan4_post1_rate) plot(Harpea8_post1_rate) plot(Goizueta8_post1_rate) plot(Erlan3_post1_rate) plot(Erlan2_post1_rate) plot(Harpea6_post1_rate) plot(Leitzaran3_post1_rate) plot(Leitzaran4_post1_rate) plot(Harpea3_post1_rate) plot(Goizueta2_post1_rate) plot(Harpea2_post1_rate) plot(Goizueta9_post1_rate) plot(Leitzaran5_post1_rate) #plot(Erlan8_post1_rate) plot(Erlan6_post1_rate) plot(Goizueta3_post1_rate) plot(Goizueta4_post1_rate) plot(Leitzaran2_post1_rate) plot(Leitzaran1_post1_rate) plot(Harpea5_post1_rate) plot(Goizueta7_post1_rate) plot(Goizueta6_post1_rate) plot(Harpea7_post1_rate) plot(Erlan1_post1_rate) #plot(Goizueta3_post2_rate) plot(Goizueta9_post2_rate) plot(Goizueta1_post2_rate) plot(Erlan6_post2_rate) plot(Leitzaran6_post2_rate) plot(Erlan5_post2_rate) plot(Erlan7_post2_rate) plot(Leitzaran3_post2_rate) plot(Erlan3_post2_rate) plot(Erlan2_post2_rate) plot(Erlan1_post2_rate) plot(Erlan4_post2_rate) plot(Goizueta8_post2_rate) plot(Harpea8_post2_rate) plot(Leitzaran1_post2_rate) plot(Harpea6_post2_rate) plot(Leitzaran2_post2_rate) plot(Goizueta4_post2_rate) plot(Leitzaran4_post2_rate) plot(Harpea7_post2_rate) #plot(Harpea5_post2_rate) plot(Goizueta6_post2_rate) plot(Goizueta7_post2_rate) #plot(Leitzaran7_post2_rate) plot(Leitzaran5_post2_rate) plot(Goizueta2_post2_rate) plot(Erlan8_post2_rate) plot(Goizueta5_post2_rate) plot(Harpea1_post2_rate) plot(Harpea2_post2_rate) plot(Harpea3_post2_rate) "],["import-dataframe.html", "Chapter 3 Import dataframe", " Chapter 3 Import dataframe calotriton_resp1 &lt;- read_excel(&quot;calotriton_resp1_metadata.xlsx&quot;) calotriton_resp1$individual&lt;-as.factor(calotriton_resp1$individual) calotriton_resp1$population&lt;-as.factor(calotriton_resp1$population) calotriton_resp1$time_point&lt;-as.factor(calotriton_resp1$time_point) calotriton_resp1$elevation&lt;-as.factor(calotriton_resp1$elevation) calotriton_resp1$temperature&lt;-as.factor(calotriton_resp1$temperature) "],["weight-distribution-among-groups.html", "Chapter 4 Weight distribution among groups 4.1 Metabolic scaling at the acclimation time-point 4.2 Metabolic scaling at each group and time-point", " Chapter 4 Weight distribution among groups calotriton_resp1 %&gt;% filter(time_point==&quot;0&quot;)%&gt;% ggplot(aes(x = population, y = weight, color=temperature, shape=temperature)) + geom_boxplot(outlier.shape = NA, position = position_dodge(width = 0.75)) + geom_jitter(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75), alpha = 0.8)+ scale_color_manual(name=&quot;temperature&quot;, breaks=c(&quot;14&quot;,&quot;20&quot;), values=c(&#39;#4477AA&#39;, &quot;#ff0000&quot;))+ theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+ stat_compare_means(size=3,vjust = 0.8, hjust=1 )+ theme(legend.position=&quot;right&quot;)+ labs(x = &quot;Population&quot;, y= &quot;Weight (g)&quot;) weight_subset&lt;-calotriton_resp1 %&gt;% filter(time_point==&quot;0&quot;) #Overall weight_subset$weight %&gt;% mean() [1] 6.22125 weight_subset$weight %&gt;% sd() [1] 1.806429 #In high elevation newts weight_subset_high&lt;-weight_subset %&gt;% filter(elevation==&quot;High&quot;) weight_subset_high$weight %&gt;% mean() [1] 7.04 weight_subset_high$weight %&gt;% sd() [1] 1.212436 #In low elevation newts weight_subset_low&lt;-weight_subset %&gt;% filter(elevation==&quot;Low&quot;) weight_subset_low$weight %&gt;% mean() [1] 5.4025 weight_subset_low$weight %&gt;% sd() [1] 2.087221 4.1 Metabolic scaling at the acclimation time-point ggplot(weight_subset, aes(weight,o2, color=population, shape=temperature)) + geom_point() + geom_smooth(method = lm, formula = y ~ x)+ stat_poly_eq()+ labs(x = &quot;Weight (g)&quot;, y= &quot;O2 consumption (ml/s)&quot;) 4.1.1 High elevation newts ggplot(weight_subset_high, aes(weight ,o2, shape=temperature)) + geom_point() + geom_smooth(method = lm, formula = y ~ x)+ stat_poly_eq()+ labs(x = &quot;Weight (g)&quot;, y= &quot;O2 consumption (ml/s)&quot;) 4.1.2 Low elevation newts ggplot(weight_subset_low, aes(weight ,o2, shape=temperature)) + geom_point() + geom_smooth(method = lm, formula = y ~ x)+ stat_poly_eq()+ labs(x = &quot;Weight (g)&quot;, y= &quot;O2 consumption (ml/s)&quot;) Warning in qt((1 - level)/2, df): NaNs produced Warning in qt((1 - level)/2, df): NaNs produced Warning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning -Inf Warning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning -Inf 4.2 Metabolic scaling at each group and time-point ggplot(calotriton_resp1, aes(weight ,o2)) + geom_point() + facet_grid(temperature~ elevation+factor(population)+time_point)+ geom_smooth(method = lm, formula = y ~ x)+ stat_poly_eq()+ labs(x = &quot;Weight (g)&quot;, y= &quot;O2 consumption (ml/s)&quot;) #Acclimation oxygen consumption per population calotriton_resp1 %&gt;% filter(time_point==&quot;0&quot;)%&gt;% ggplot(aes(x = population, y = o2_normalized, color=temperature, shape=elevation)) + geom_boxplot(outlier.shape = NA, position = position_dodge(width = 0.75)) + geom_jitter(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75), alpha = 0.8)+ scale_color_manual(name=&quot;temperature&quot;, breaks=c(&quot;14&quot;,&quot;20&quot;), values=c(&#39;#4477AA&#39;, &quot;#ff0000&quot;))+ theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+ stat_compare_means(size=3,vjust = 0.8, hjust=1 )+ theme(legend.position=&quot;right&quot;)+ labs(x = &quot;Population&quot;, y= &quot;Normalized o2 consumption (ml/s/g)&quot;) #Acclimation oxygen consumption per elevation calotriton_resp1 %&gt;% filter(time_point == &quot;0&quot;) %&gt;% ggplot(aes(x = elevation, y = o2_normalized, colour = temperature)) + geom_boxplot(outlier.shape = NA, position = position_dodge(width = 0.75)) + geom_jitter(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75), alpha = 0.8) + scale_color_manual( name = &quot;Temperature&quot;, breaks = c(&quot;14&quot;, &quot;20&quot;), values = c(&#39;#4477AA&#39;, &quot;#ff0000&quot;) ) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1)) + stat_compare_means(size = 3, vjust = 0.8, hjust = 1) + theme(legend.position = &quot;right&quot;) + labs(x = &quot;Population&quot;, y = &quot;Normalized o2 consumption (ml/s/g)&quot;) #Acclimation oxygen consumption per temperature calotriton_resp1 %&gt;% filter(time_point==&quot;0&quot;)%&gt;% ggplot(aes(x = temperature, y = o2_normalized, colour=population)) + geom_boxplot(outlier.shape = NA, position = position_dodge(width = 0.75)) + geom_jitter(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75), alpha = 0.8)+ theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+ stat_compare_means(size=3,vjust = 0.8, hjust=1 )+ theme(legend.position=&quot;right&quot;)+ labs(x = &quot;Population&quot;, y= &quot;Normalized o2 consumption (ml/s/g)&quot;) "],["time-point-oxygen-consumption.html", "Chapter 5 Time-point oxygen consumption", " Chapter 5 Time-point oxygen consumption calotriton_resp1 %&gt;% filter(time_point!=&quot;0&quot;) %&gt;% ggplot(aes(x = time_point, y = o2_normalized, color=time_point, fill=time_point)) + geom_boxplot()+ geom_jitter() + scale_color_manual( name = &quot;Time point&quot;, breaks = c(&quot;1&quot;, &quot;2&quot;), values = c(&#39;#ffa500&#39;, &quot;#b37400&quot;) ) + scale_fill_manual( name = &quot;Time point&quot;, breaks = c(&quot;1&quot;, &quot;2&quot;), values = c(&#39;#ffa50050&#39;, &quot;#b3740050&quot;) )+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ facet_wrap(~ factor(temperature)+elevation)+ stat_compare_means(size=3)+ theme(legend.position=&quot;right&quot;)+ labs(x = &quot;Time_point&quot;, y= &quot;Normalized o2 consumption (ml/s/g)&quot;) calotriton_resp1 %&gt;% filter(time_point!=&quot;0&quot;) %&gt;% ggplot(aes(x = time_point, y = o2_normalized, color=time_point, fill=time_point)) + geom_boxplot()+ geom_jitter() + scale_color_manual( name = &quot;Time point&quot;, breaks = c(&quot;1&quot;, &quot;2&quot;), values = c(&#39;#ffa500&#39;, &quot;#b37400&quot;) ) + scale_fill_manual( name = &quot;Time point&quot;, breaks = c(&quot;1&quot;, &quot;2&quot;), values = c(&#39;#ffa50050&#39;, &quot;#b3740050&quot;) )+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ facet_grid(temperature~factor(elevation)+population)+ stat_compare_means(size=3)+ theme(legend.position=&quot;right&quot;)+ labs(x = &quot;Time_point&quot;, y= &quot;Normalized o2 consumption (ml/s/g)&quot;) "],["time-point-oxygen-consumption-linking-individuals.html", "Chapter 6 Time-point oxygen consumption, linking individuals", " Chapter 6 Time-point oxygen consumption, linking individuals calotriton_resp1 %&gt;% filter(time_point!=&quot;0&quot;) %&gt;% ggplot(aes(y = o2_normalized, x = interaction(time_point, individual), color = time_point, fill = time_point)) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5) + facet_grid(temperature~factor(elevation)+population, scale=&quot;free&quot;) + geom_line(aes(group=individual)) + theme_minimal()+ theme( axis.text.x = element_text(angle = 45, hjust = 1, size=0))+ labs(x = &quot;Time-point&quot;, y = &quot;Normalized o2 consumption (ml/s/g)&quot;, color = &quot;Time-point&quot;, fill = &quot;Time-point&quot;) "],["raw-data-modelling-lmm.html", "Chapter 7 Raw data modelling (LMM)", " Chapter 7 Raw data modelling (LMM) #exclude the acclimation time-point calotriton_resp1_subset&lt;-calotriton_resp1 %&gt;% filter(time_point!=&quot;0&quot;) #Create linear model formula formula &lt;- formula(o2_normalized ~ time_point*temperature*population+(1|individual)) #Fit the linear model model &lt;- lmer(formula, data = calotriton_resp1_subset) boundary (singular) fit: see help(&#39;isSingular&#39;) #Print the model summary summary(model) Linear mixed model fit by REML [&#39;lmerMod&#39;] Formula: o2_normalized ~ time_point * temperature * population + (1 | individual) Data: calotriton_resp1_subset REML criterion at convergence: -540.2 Scaled residuals: Min 1Q Median 3Q Max -1.9238 -0.5697 0.1368 0.6823 1.8585 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.00e+00 0.0000000 Residual 9.37e-08 0.0003061 Number of obs: 58, groups: individual, 31 Fixed effects: Estimate Std. Error t value (Intercept) 8.460e-04 1.767e-04 4.787 time_point2 -2.513e-05 2.338e-04 -0.108 temperature20 3.534e-04 2.338e-04 1.512 populationGoizueta 2.336e-04 2.235e-04 1.045 populationHarpea -3.588e-04 2.499e-04 -1.436 populationLeitzaran 1.300e-05 2.499e-04 0.052 time_point2:temperature20 -3.960e-04 3.186e-04 -1.243 time_point2:populationGoizueta -2.728e-04 3.112e-04 -0.877 time_point2:populationHarpea 3.292e-04 3.422e-04 0.962 time_point2:populationLeitzaran 4.449e-04 3.643e-04 1.221 temperature20:populationGoizueta -8.314e-04 3.112e-04 -2.672 temperature20:populationHarpea 2.267e-04 3.306e-04 0.686 temperature20:populationLeitzaran 6.616e-05 3.306e-04 0.200 time_point2:temperature20:populationGoizueta 1.275e-03 4.365e-04 2.920 time_point2:temperature20:populationHarpea 1.560e-04 4.676e-04 0.334 time_point2:temperature20:populationLeitzaran -3.016e-04 4.758e-04 -0.634 Correlation matrix not shown by default, as p = 16 &gt; 12. Use print(x, correlation=TRUE) or vcov(x) if you need it optimizer (nloptwrap) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) MuMIn::r.squaredGLMM(model) R2m R2c [1,] 0.3534154 0.3534154 "],["raw-data-modelling-lmm-without-interaction.html", "Chapter 8 Raw data modelling (LMM) without interaction 8.1 Raw data modelling (LMM) using elevation 8.2 Raw data modelling (LMM) using elevation as interaction", " Chapter 8 Raw data modelling (LMM) without interaction #Create linear model formula formula3 &lt;- formula(o2_normalized ~ time_point*temperature+population+(1|individual)) #Fit the linear model model3 &lt;- lmer(formula3, data = calotriton_resp1_subset) boundary (singular) fit: see help(&#39;isSingular&#39;) #Print the model summary summary(model3) Linear mixed model fit by REML [&#39;lmerMod&#39;] Formula: o2_normalized ~ time_point * temperature + population + (1 | individual) Data: calotriton_resp1_subset REML criterion at convergence: -650.5 Scaled residuals: Min 1Q Median 3Q Max -2.07343 -0.72830 0.05987 0.69854 2.38744 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.000e+00 0.0000000 Residual 1.205e-07 0.0003472 Number of obs: 58, groups: individual, 31 Fixed effects: Estimate Std. Error t value (Intercept) 8.195e-04 1.240e-04 6.611 time_point2 2.876e-05 1.342e-04 0.214 temperature20 1.782e-04 1.275e-04 1.398 populationGoizueta 1.699e-05 1.234e-04 0.138 populationHarpea -3.175e-05 1.317e-04 -0.241 populationLeitzaran 1.705e-04 1.321e-04 1.290 time_point2:temperature20 -5.430e-05 1.834e-04 -0.296 Correlation of Fixed Effects: (Intr) tm_pn2 tmpr20 ppltnG ppltnH ppltnL time_point2 -0.566 temperatr20 -0.567 0.506 populatnGzt -0.582 0.067 0.067 populatnHrp -0.510 0.034 -0.003 0.497 popltnLtzrn -0.510 0.075 -0.003 0.495 0.464 tm_pnt2:t20 0.409 -0.732 -0.693 -0.048 0.000 -0.055 optimizer (nloptwrap) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) MuMIn::r.squaredGLMM(model3) R2m R2c [1,] 0.09324329 0.09324329 8.1 Raw data modelling (LMM) using elevation #Create linear model formula formula4 &lt;- formula(o2_normalized ~ time_point*temperature+elevation+(1|individual)) #QC_normalized=o2 consumption normalized (ml/s/g) #Fit the linear model model4 &lt;- lmer(formula4, data = calotriton_resp1_subset) boundary (singular) fit: see help(&#39;isSingular&#39;) #Print the model summary summary(model4) Linear mixed model fit by REML [&#39;lmerMod&#39;] Formula: o2_normalized ~ time_point * temperature + elevation + (1 | individual) Data: calotriton_resp1_subset REML criterion at convergence: -681.1 Scaled residuals: Min 1Q Median 3Q Max -1.94738 -0.63126 0.07569 0.73963 2.66971 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.000e+00 0.0000000 Residual 1.194e-07 0.0003455 Number of obs: 58, groups: individual, 31 Fixed effects: Estimate Std. Error t value (Intercept) 7.992e-04 1.060e-04 7.540 time_point2 2.789e-05 1.334e-04 0.209 temperature20 1.884e-04 1.266e-04 1.488 elevationLow 9.820e-05 9.107e-05 1.078 time_point2:temperature20 -5.198e-05 1.825e-04 -0.285 Correlation of Fixed Effects: (Intr) tm_pn2 tmpr20 elvtnL time_point2 -0.640 temperatr20 -0.661 0.509 elevationLw -0.491 0.075 0.051 tm_pnt2:t20 0.476 -0.733 -0.696 -0.071 optimizer (nloptwrap) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) MuMIn::r.squaredGLMM(model4) R2m R2c [1,] 0.07199619 0.07199619 8.2 Raw data modelling (LMM) using elevation as interaction #Create linear model formula formula5 &lt;- formula(o2_normalized ~ time_point*temperature*elevation+(1|individual)) #QC_normalized=o2 consumption normalized (ml/s/g) #Fit the linear model model5 &lt;- lmer(formula5, data = calotriton_resp1_subset) boundary (singular) fit: see help(&#39;isSingular&#39;) #Print the model summary summary(model5) Linear mixed model fit by REML [&#39;lmerMod&#39;] Formula: o2_normalized ~ time_point * temperature * elevation + (1 | individual) Data: calotriton_resp1_subset REML criterion at convergence: -641 Scaled residuals: Min 1Q Median 3Q Max -2.13722 -0.68608 0.06061 0.56779 2.64762 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.000e+00 0.00000 Residual 1.156e-07 0.00034 Number of obs: 58, groups: individual, 31 Fixed effects: Estimate Std. Error t value (Intercept) 0.0006666 0.0001388 4.802 time_point2 0.0001416 0.0001892 0.748 temperature20 0.0004667 0.0001836 2.541 elevationLow 0.0003303 0.0001836 1.798 time_point2:temperature20 -0.0003454 0.0002584 -1.337 time_point2:elevationLow -0.0001911 0.0002637 -0.725 temperature20:elevationLow -0.0005235 0.0002503 -2.092 time_point2:temperature20:elevationLow 0.0005462 0.0003597 1.518 Correlation of Fixed Effects: (Intr) tm_pn2 tmpr20 elvtnL tm_2:20 tm_2:L tm20:L time_point2 -0.734 temperatr20 -0.756 0.555 elevationLw -0.756 0.555 0.571 tm_pnt2:t20 0.537 -0.732 -0.711 -0.406 tm_pnt2:lvL 0.527 -0.718 -0.398 -0.697 0.525 tmprtr20:lL 0.555 -0.407 -0.734 -0.734 0.522 0.511 tm_pn2:20:L -0.386 0.526 0.511 0.511 -0.718 -0.733 -0.696 optimizer (nloptwrap) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) MuMIn::r.squaredGLMM(model5) R2m R2c [1,] 0.139987 0.139987 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
